{"ast":null,"code":"var _jsxFileName = \"/Users/aniket/Desktop/chat-app-master/Chat App/client/src/modules/Dashboard/index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport pic from '../../assets/pic.jpg';\nimport Input from '../../components/Input/index';\nimport { io } from 'socket.io-client';\nimport './Dashboard.css'; // Assuming you have a CSS file for Dashboard styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _messages$messages;\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user:detail')));\n  const [conversations, setConversations] = useState([]);\n  const [messages, setMessages] = useState({});\n  const [message, setMessage] = useState('');\n  const [users, setUsers] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [showFriends, setShowFriends] = useState(false); // State to toggle friend section visibility\n  const messageRef = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    setSocket(io('http://localhost:8080'));\n  }, []);\n  useEffect(() => {\n    if (socket) {\n      socket.emit('addUser', user === null || user === void 0 ? void 0 : user.id);\n      socket.on('getUsers', users => {\n        console.log('activeUsers :>> ', users);\n      });\n      socket.on('getMessage', data => {\n        console.log('Received message:', data); // Debugging\n        handleNewMessage(data);\n      });\n    }\n  }, [socket, user === null || user === void 0 ? void 0 : user.id]);\n  useEffect(() => {\n    var _messageRef$current;\n    messageRef === null || messageRef === void 0 ? void 0 : (_messageRef$current = messageRef.current) === null || _messageRef$current === void 0 ? void 0 : _messageRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages === null || messages === void 0 ? void 0 : messages.messages]);\n  const fetchConversations = async () => {\n    const loggedInUser = JSON.parse(localStorage.getItem('user:detail'));\n    const res = await fetch(`http://localhost:8000/api/conversations/${loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const resData = await res.json();\n\n    // Filter out duplicates\n    const uniqueConversations = resData.reduce((acc, current) => {\n      const x = acc.find(item => item.user.email === current.user.email);\n      if (!x) {\n        return acc.concat([current]);\n      } else {\n        return acc;\n      }\n    }, []);\n\n    // Sort conversations by most recent message timestamp\n    const sortedConversations = uniqueConversations.sort((a, b) => {\n      var _a$lastMessage, _b$lastMessage;\n      const aTimestamp = (_a$lastMessage = a.lastMessage) !== null && _a$lastMessage !== void 0 && _a$lastMessage.timestamp ? new Date(a.lastMessage.timestamp) : 0;\n      const bTimestamp = (_b$lastMessage = b.lastMessage) !== null && _b$lastMessage !== void 0 && _b$lastMessage.timestamp ? new Date(b.lastMessage.timestamp) : 0;\n      return bTimestamp - aTimestamp;\n    });\n\n    // Update state with sorted unique conversations\n    setConversations(sortedConversations);\n\n    // Store sorted unique conversations in local storage\n    localStorage.setItem('uniqueConversations', JSON.stringify(sortedConversations));\n  };\n  useEffect(() => {\n    // Load conversations from local storage if available\n    const storedConversations = JSON.parse(localStorage.getItem('uniqueConversations'));\n    if (storedConversations) {\n      // Sort conversations by most recent message timestamp\n      const sortedConversations = storedConversations.sort((a, b) => {\n        var _b$lastMessage2, _a$lastMessage2;\n        return new Date((_b$lastMessage2 = b.lastMessage) === null || _b$lastMessage2 === void 0 ? void 0 : _b$lastMessage2.timestamp) - new Date((_a$lastMessage2 = a.lastMessage) === null || _a$lastMessage2 === void 0 ? void 0 : _a$lastMessage2.timestamp);\n      });\n      setConversations(sortedConversations);\n    } else {\n      fetchConversations();\n    }\n  }, []);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const res = await fetch(`http://localhost:8000/api/users/${user === null || user === void 0 ? void 0 : user.id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const resData = await res.json();\n      setUsers(resData);\n    };\n    fetchUsers();\n  }, [user === null || user === void 0 ? void 0 : user.id]);\n  const fetchMessages = async (conversationId, receiver) => {\n    const res = await fetch(`http://localhost:8000/api/message/${conversationId}?senderId=${user === null || user === void 0 ? void 0 : user.id}&receiverId=${receiver === null || receiver === void 0 ? void 0 : receiver.receiverId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const resData = await res.json();\n    setMessages({\n      messages: resData,\n      receiver,\n      conversationId\n    });\n\n    // Update conversations to remove new message notification\n    setConversations(prevConversations => {\n      const updatedConversations = prevConversations.map(convo => convo.conversationId === conversationId ? {\n        ...convo,\n        newMessage: false\n      } : convo);\n\n      // Update local storage\n      localStorage.setItem('uniqueConversations', JSON.stringify(updatedConversations));\n      return updatedConversations;\n    });\n  };\n  const sendMessage = async () => {\n    var _messages$receiver, _messages$receiver2;\n    if (message.trim() === '') {\n      return;\n    }\n    setMessage('');\n    socket === null || socket === void 0 ? void 0 : socket.emit('sendMessage', {\n      senderId: user === null || user === void 0 ? void 0 : user.id,\n      receiverId: messages === null || messages === void 0 ? void 0 : (_messages$receiver = messages.receiver) === null || _messages$receiver === void 0 ? void 0 : _messages$receiver.receiverId,\n      message,\n      conversationId: messages === null || messages === void 0 ? void 0 : messages.conversationId\n    });\n    await fetch(`http://localhost:8000/api/message`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        conversationId: messages === null || messages === void 0 ? void 0 : messages.conversationId,\n        senderId: user === null || user === void 0 ? void 0 : user.id,\n        message,\n        receiverId: messages === null || messages === void 0 ? void 0 : (_messages$receiver2 = messages.receiver) === null || _messages$receiver2 === void 0 ? void 0 : _messages$receiver2.receiverId\n      })\n    });\n\n    // Refresh the dashboard and move conversation to the top\n    fetchConversations();\n    fetchMessages(messages === null || messages === void 0 ? void 0 : messages.conversationId, messages === null || messages === void 0 ? void 0 : messages.receiver);\n    moveConversationToTop(messages === null || messages === void 0 ? void 0 : messages.conversationId, false);\n  };\n  const handleNewMessage = data => {\n    setMessages(prev => ({\n      ...prev,\n      messages: [...prev.messages, {\n        user: data.user,\n        message: data.message\n      }]\n    }));\n\n    // Move conversation to top and add new message notification\n    moveConversationToTop(data.conversationId, true);\n  };\n  const moveConversationToTop = (conversationId, newMessage) => {\n    setConversations(prevConversations => {\n      const conversation = prevConversations.find(convo => convo.conversationId === conversationId);\n      const otherConversations = prevConversations.filter(convo => convo.conversationId !== conversationId);\n      if (conversation) {\n        const updatedConversation = {\n          ...conversation,\n          newMessage,\n          lastMessage: {\n            ...conversation.lastMessage,\n            timestamp: new Date()\n          } // Update timestamp correctly\n        };\n\n        const updatedConversations = [updatedConversation, ...otherConversations];\n\n        // Sort updated conversations by most recent message timestamp\n        const sortedConversations = updatedConversations.sort((a, b) => {\n          var _a$lastMessage3, _b$lastMessage3;\n          const aTimestamp = (_a$lastMessage3 = a.lastMessage) !== null && _a$lastMessage3 !== void 0 && _a$lastMessage3.timestamp ? new Date(a.lastMessage.timestamp) : 0;\n          const bTimestamp = (_b$lastMessage3 = b.lastMessage) !== null && _b$lastMessage3 !== void 0 && _b$lastMessage3.timestamp ? new Date(b.lastMessage.timestamp) : 0;\n          return bTimestamp - aTimestamp;\n        });\n\n        // Update local storage\n        localStorage.setItem('uniqueConversations', JSON.stringify(sortedConversations));\n        return sortedConversations;\n      }\n      return prevConversations;\n    });\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' || e.key === 'Return' || e.keyCode === 13) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('user:detail');\n    localStorage.removeItem('user:token');\n    navigate('/users/sign_in');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[25%] h-screen bg-secondary overflow-scroll\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center my-8 mx-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pic,\n            width: 75,\n            height: 75,\n            className: \"border border-primary p-[2px] rounded-full\",\n            alt: \"User Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl text-white\",\n            children: user === null || user === void 0 ? void 0 : user.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg text-white\",\n            children: \"My Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mx-10 my-4 px-4 py-2 bg-red-500 text-white rounded\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-7 mt-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-main text-lg font-semibold\",\n          children: \"Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: conversations.length > 0 ? conversations.map(_ref => {\n            let {\n              conversationId,\n              user,\n              newMessage\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center py-6 border-b border-b-gray-300\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cursor-pointer flex items-center\",\n                onClick: () => fetchMessages(conversationId, user),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: pic,\n                    className: \"w-[60px] h-[60px] rounded-full p-[2px] border border-primary\",\n                    alt: \"User Profile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 24\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"text-lg text-white font-semibold\",\n                    children: user === null || user === void 0 ? void 0 : user.fullName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-white text-gray-600\",\n                    children: user === null || user === void 0 ? void 0 : user.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 19\n                }, this), newMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-auto\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"h-[10px] w-[10px] bg-red-500 rounded-full\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this)\n            }, `${conversationId}-${user.email}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center py-6\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: \"No Conversations Yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[75%] bg-main h-screen flex flex-col justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-y-auto p-4\",\n        children: [(messages === null || messages === void 0 ? void 0 : (_messages$messages = messages.messages) === null || _messages$messages === void 0 ? void 0 : _messages$messages.length) > 0 ? messages.messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${msg.user.id === user.id ? 'justify-end' : 'justify-start'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex items-center mb-2 ${msg.user.id === user.id ? 'bg-primary text-white' : 'bg-secondary text-white'} rounded-lg p-2 max-w-[60%]`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: pic,\n                className: \"w-[40px] h-[40px] rounded-full mr-2\",\n                alt: \"User Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm\",\n                children: msg.user.fullName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm\",\n                children: msg.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center h-full\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: \"No messages yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messageRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            className: \"flex-grow\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyDown: handleKeyDown,\n            placeholder: \"Type your message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ml-4 px-4 py-2 bg-primary text-white rounded\",\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"u/Sl1Uj3hJbI1kxZyCkCuCprkz4=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useRef","useState","useNavigate","pic","Input","io","jsxDEV","_jsxDEV","Dashboard","_s","_messages$messages","user","setUser","JSON","parse","localStorage","getItem","conversations","setConversations","messages","setMessages","message","setMessage","users","setUsers","socket","setSocket","showFriends","setShowFriends","messageRef","navigate","emit","id","on","console","log","data","handleNewMessage","_messageRef$current","current","scrollIntoView","behavior","fetchConversations","loggedInUser","res","fetch","method","headers","resData","json","uniqueConversations","reduce","acc","x","find","item","email","concat","sortedConversations","sort","a","b","_a$lastMessage","_b$lastMessage","aTimestamp","lastMessage","timestamp","Date","bTimestamp","setItem","stringify","storedConversations","_b$lastMessage2","_a$lastMessage2","fetchUsers","fetchMessages","conversationId","receiver","receiverId","prevConversations","updatedConversations","map","convo","newMessage","sendMessage","_messages$receiver","_messages$receiver2","trim","senderId","body","moveConversationToTop","prev","conversation","otherConversations","filter","updatedConversation","_a$lastMessage3","_b$lastMessage3","handleKeyDown","e","key","keyCode","preventDefault","handleLogout","removeItem","className","children","src","width","height","alt","fileName","_jsxFileName","lineNumber","columnNumber","fullName","onClick","length","_ref","msg","index","ref","value","onChange","target","onKeyDown","placeholder","_c","$RefreshReg$"],"sources":["/Users/aniket/Desktop/chat-app-master/Chat App/client/src/modules/Dashboard/index.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport pic from '../../assets/pic.jpg';\nimport Input from '../../components/Input/index';\nimport { io } from 'socket.io-client';\nimport './Dashboard.css'; // Assuming you have a CSS file for Dashboard styles\n\nconst Dashboard = () => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user:detail')));\n  const [conversations, setConversations] = useState([]);\n  const [messages, setMessages] = useState({});\n  const [message, setMessage] = useState('');\n  const [users, setUsers] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [showFriends, setShowFriends] = useState(false); // State to toggle friend section visibility\n  const messageRef = useRef(null);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setSocket(io('http://localhost:8080'));\n  }, []);\n\n  useEffect(() => {\n    if (socket) {\n      socket.emit('addUser', user?.id);\n      socket.on('getUsers', users => {\n        console.log('activeUsers :>> ', users);\n      });\n      socket.on('getMessage', data => {\n        console.log('Received message:', data); // Debugging\n        handleNewMessage(data);\n      });\n    }\n  }, [socket, user?.id]);\n\n  useEffect(() => {\n    messageRef?.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages?.messages]);\n\n  const fetchConversations = async () => {\n    const loggedInUser = JSON.parse(localStorage.getItem('user:detail'));\n    const res = await fetch(`http://localhost:8000/api/conversations/${loggedInUser?.id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    });\n    const resData = await res.json();\n\n    // Filter out duplicates\n    const uniqueConversations = resData.reduce((acc, current) => {\n      const x = acc.find(item => item.user.email === current.user.email);\n      if (!x) {\n        return acc.concat([current]);\n      } else {\n        return acc;\n      }\n    }, []);\n\n    // Sort conversations by most recent message timestamp\n    const sortedConversations = uniqueConversations.sort((a, b) => {\n      const aTimestamp = a.lastMessage?.timestamp ? new Date(a.lastMessage.timestamp) : 0;\n      const bTimestamp = b.lastMessage?.timestamp ? new Date(b.lastMessage.timestamp) : 0;\n      return bTimestamp - aTimestamp;\n    });\n\n    // Update state with sorted unique conversations\n    setConversations(sortedConversations);\n\n    // Store sorted unique conversations in local storage\n    localStorage.setItem('uniqueConversations', JSON.stringify(sortedConversations));\n  };\n\n  useEffect(() => {\n    // Load conversations from local storage if available\n    const storedConversations = JSON.parse(localStorage.getItem('uniqueConversations'));\n    if (storedConversations) {\n      // Sort conversations by most recent message timestamp\n      const sortedConversations = storedConversations.sort((a, b) => new Date(b.lastMessage?.timestamp) - new Date(a.lastMessage?.timestamp));\n      setConversations(sortedConversations);\n    } else {\n      fetchConversations();\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const res = await fetch(`http://localhost:8000/api/users/${user?.id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n      const resData = await res.json();\n      setUsers(resData);\n    };\n    fetchUsers();\n  }, [user?.id]);\n\n  const fetchMessages = async (conversationId, receiver) => {\n    const res = await fetch(`http://localhost:8000/api/message/${conversationId}?senderId=${user?.id}&receiverId=${receiver?.receiverId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    });\n    const resData = await res.json();\n    setMessages({ messages: resData, receiver, conversationId });\n\n    // Update conversations to remove new message notification\n    setConversations(prevConversations => {\n      const updatedConversations = prevConversations.map(convo =>\n        convo.conversationId === conversationId ? { ...convo, newMessage: false } : convo\n      );\n\n      // Update local storage\n      localStorage.setItem('uniqueConversations', JSON.stringify(updatedConversations));\n\n      return updatedConversations;\n    });\n  };\n\n  const sendMessage = async () => {\n    if (message.trim() === '') {\n      return;\n    }\n\n    setMessage('');\n    socket?.emit('sendMessage', {\n      senderId: user?.id,\n      receiverId: messages?.receiver?.receiverId,\n      message,\n      conversationId: messages?.conversationId\n    });\n    await fetch(`http://localhost:8000/api/message`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        conversationId: messages?.conversationId,\n        senderId: user?.id,\n        message,\n        receiverId: messages?.receiver?.receiverId\n      })\n    });\n\n    // Refresh the dashboard and move conversation to the top\n    fetchConversations();\n    fetchMessages(messages?.conversationId, messages?.receiver);\n    moveConversationToTop(messages?.conversationId, false);\n  };\n\n  const handleNewMessage = (data) => {\n    setMessages(prev => ({\n      ...prev,\n      messages: [...prev.messages, { user: data.user, message: data.message }]\n    }));\n\n    // Move conversation to top and add new message notification\n    moveConversationToTop(data.conversationId, true);\n  };\n\n  const moveConversationToTop = (conversationId, newMessage) => {\n    setConversations(prevConversations => {\n      const conversation = prevConversations.find(convo => convo.conversationId === conversationId);\n      const otherConversations = prevConversations.filter(convo => convo.conversationId !== conversationId);\n\n      if (conversation) {\n        const updatedConversation = {\n          ...conversation,\n          newMessage,\n          lastMessage: { ...conversation.lastMessage, timestamp: new Date() } // Update timestamp correctly\n        };\n        const updatedConversations = [updatedConversation, ...otherConversations];\n\n        // Sort updated conversations by most recent message timestamp\n        const sortedConversations = updatedConversations.sort((a, b) => {\n          const aTimestamp = a.lastMessage?.timestamp ? new Date(a.lastMessage.timestamp) : 0;\n          const bTimestamp = b.lastMessage?.timestamp ? new Date(b.lastMessage.timestamp) : 0;\n          return bTimestamp - aTimestamp;\n        });\n\n        // Update local storage\n        localStorage.setItem('uniqueConversations', JSON.stringify(sortedConversations));\n\n        return sortedConversations;\n      }\n      return prevConversations;\n    });\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' || e.key === 'Return' || e.keyCode === 13) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('user:detail');\n    localStorage.removeItem('user:token');\n    navigate('/users/sign_in');\n  };\n\n  return (\n    <div className=\"w-screen flex\">\n      {/* Left Section */}\n      <div className=\"w-[25%] h-screen bg-secondary overflow-scroll\">\n        <div className=\"flex items-center my-8 mx-10\">\n          <div><img src={pic} width={75} height={75} className=\"border border-primary p-[2px] rounded-full\" alt=\"User Profile\" /></div>\n          <div className=\"ml-6\">\n            <h3 className=\"text-xl text-white\">{user?.fullName}</h3>\n            <p className=\"text-lg text-white\">My Account</p>\n          </div>\n        </div>\n        <button className=\"mx-10 my-4 px-4 py-2 bg-red-500 text-white rounded\" onClick={handleLogout}>\n          Logout\n        </button>\n        <hr />\n        <div className=\"mx-7 mt-10\">\n          <div className=\"text-main text-lg font-semibold\">Messages</div>\n          <div>\n            {conversations.length > 0 ? conversations.map(({ conversationId, user, newMessage }) => (\n              <div className=\"flex items-center py-6 border-b border-b-gray-300\" key={`${conversationId}-${user.email}`}>\n                <div className=\"cursor-pointer flex items-center\" onClick={() => fetchMessages(conversationId, user)}>\n                  <div><img src={pic} className=\"w-[60px] h-[60px] rounded-full p-[2px] border border-primary\" alt=\"User Profile\" /></div>\n                  <div className=\"ml-6\">\n                    <h3 className=\"text-lg text-white font-semibold\">{user?.fullName}</h3>\n                    <p className=\"text-sm text-white text-gray-600\">{user?.email}</p>\n                  </div>\n                  {newMessage && (\n                    <div className=\"ml-auto\">\n                      <span className=\"h-[10px] w-[10px] bg-red-500 rounded-full\" />\n                    </div>\n                  )}\n                </div>\n              </div>\n            )) : (\n              <div className=\"flex items-center py-6\">\n                <p className=\"text-gray-600\">No Conversations Yet</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      {/* Right Section */}\n      <div className=\"w-[75%] bg-main h-screen flex flex-col justify-between\">\n        <div className=\"overflow-y-auto p-4\">\n          {messages?.messages?.length > 0 ? messages.messages.map((msg, index) => (\n            <div key={index} className={`flex ${msg.user.id === user.id ? 'justify-end' : 'justify-start'}`}>\n              <div className={`flex items-center mb-2 ${msg.user.id === user.id ? 'bg-primary text-white' : 'bg-secondary text-white'} rounded-lg p-2 max-w-[60%]`}>\n                <div>\n                  <img src={pic} className=\"w-[40px] h-[40px] rounded-full mr-2\" alt=\"User Profile\" />\n                </div>\n                <div>\n                  <p className=\"text-sm\">{msg.user.fullName}</p>\n                  <p className=\"text-sm\">{msg.message}</p>\n                </div>\n              </div>\n            </div>\n          )) : (\n            <div className=\"flex items-center justify-center h-full\">\n              <p className=\"text-gray-600\">No messages yet</p>\n            </div>\n          )}\n          <div ref={messageRef}></div>\n        </div>\n        <div className=\"p-4\">\n          <div className=\"flex\">\n            <Input\n              className=\"flex-grow\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              onKeyDown={handleKeyDown}\n              placeholder=\"Type your message...\"\n            />\n            <button className=\"ml-4 px-4 py-2 bg-primary text-white rounded\" onClick={sendMessage}>Send</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}