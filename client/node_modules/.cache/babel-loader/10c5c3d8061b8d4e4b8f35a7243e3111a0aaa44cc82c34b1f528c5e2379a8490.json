{"ast":null,"code":"var _jsxFileName = \"/Users/aniket/Desktop/chat-app-master/Chat App/client/src/modules/Form/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Input from '../../components/Input/index';\nimport Button from '../../components/Button/Index';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { PublicClientApplication } from '@azure/msal-browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst msalConfig = {\n  auth: {\n    clientId: 'YOUR_MICROSOFT_CLIENT_ID',\n    redirectUri: 'http://localhost:3000'\n  }\n};\nconst msalInstance = new PublicClientApplication(msalConfig);\nconst Form = _ref => {\n  _s();\n  let {\n    isSignInPage = true\n  } = _ref;\n  const [data, setData] = useState({\n    fullName: isSignInPage ? '' : '',\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('Form submitted with data:', data);\n    try {\n      const res = await fetch(`http://localhost:8005/api/${isSignInPage ? 'login' : 'register'}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      console.log('Response status:', res.status);\n      console.log('Response headers:', res.headers);\n      if (!res.ok) {\n        const errorMessage = await res.text();\n        throw new Error(errorMessage || 'Network response was not ok.');\n      }\n      const resdata = await res.json();\n      console.log('Response data:', resdata);\n      if (resdata.token) {\n        localStorage.setItem('user:token', resdata.token);\n        localStorage.setItem('user:detail', JSON.stringify(resdata.user));\n        navigate('/');\n      } else {\n        alert('Token not received. Authentication failed.');\n      }\n    } catch (error) {\n      console.error('Error:', error.message);\n      alert('An error occurred. Please try again later.');\n    }\n  };\n  const handleGoogleSuccess = async response => {\n    console.log('Google response:', response);\n    try {\n      const res = await fetch('http://localhost:8005/api/google-login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: response.credential\n        })\n      });\n      if (!res.ok) {\n        const errorMessage = await res.text();\n        throw new Error(errorMessage || 'Network response was not ok.');\n      }\n      const resdata = await res.json();\n      if (resdata.token) {\n        localStorage.setItem('user:token', resdata.token);\n        localStorage.setItem('user:detail', JSON.stringify(resdata.user));\n        navigate('/');\n      } else {\n        alert('Token not received. Authentication failed.');\n      }\n    } catch (error) {\n      console.error('Error:', error.message);\n      alert('An error occurred. Please try again later.');\n    }\n  };\n  const handleGoogleFailure = error => {\n    console.error('Google login error:', error);\n    alert('Google sign-in failed. Please try again later.');\n  };\n  const handleMicrosoftLogin = async () => {\n    try {\n      const loginResponse = await msalInstance.loginPopup({\n        scopes: [\"user.read\"],\n        prompt: \"select_account\"\n      });\n      console.log('Microsoft login response:', loginResponse);\n      const res = await fetch('http://localhost:8005/api/microsoft-login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: loginResponse.accessToken\n        })\n      });\n      if (!res.ok) {\n        const errorMessage = await res.text();\n        throw new Error(errorMessage || 'Network response was not ok.');\n      }\n      const resdata = await res.json();\n      if (resdata.token) {\n        localStorage.setItem('user:token', resdata.token);\n        localStorage.setItem('user:detail', JSON.stringify(resdata.user));\n        navigate('/');\n      } else {\n        alert('Token not received. Authentication failed.');\n      }\n    } catch (error) {\n      console.error('Error:', error.message);\n      alert('Microsoft sign-in failed. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: \"YOUR_GOOGLE_CLIENT_ID\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white w-[400px] h-[500px] shadow-lg rounded-[10%] flex flex-col items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-3xl font-extrabold\",\n        children: [\"Welcome \", isSignInPage ? 'back' : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-l mb-7\",\n        children: isSignInPage ? 'Sign in to your account' : 'Signup now to get started'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"w-full justify-center flex flex-col items-center\",\n        children: [!isSignInPage && /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Full name\",\n          name: \"fullName\",\n          placeholder: \"Enter your full name\",\n          className: \"mb-5 w-[60%]\",\n          value: data.fullName,\n          onChange: e => setData({\n            ...data,\n            fullName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Email address\",\n          name: \"email\",\n          placeholder: \"Enter your email address\",\n          className: \"mb-5 w-[60%]\",\n          value: data.email,\n          onChange: e => setData({\n            ...data,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Password\",\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Enter your password\",\n          className: \"mb-5 w-[60%]\",\n          value: data.password,\n          onChange: e => setData({\n            ...data,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          label: isSignInPage ? 'Sign in' : 'Signup',\n          className: \"w-[60%] mb-4\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: handleGoogleSuccess,\n          onError: handleGoogleFailure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Sign in with Microsoft\",\n          className: \"w-[60%]\",\n          onClick: handleMicrosoftLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [isSignInPage ? \"Don't have an account? \" : 'Already have an account? ', /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-primary cursor-pointer underline\",\n          onClick: () => navigate(`/users/${isSignInPage ? 'sign_up' : 'sign_in'}`),\n          children: isSignInPage ? 'Sign up' : 'Sign in'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"tyKwn7jR3futVqKeF9so3P+W9XQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Input","Button","useNavigate","GoogleOAuthProvider","GoogleLogin","PublicClientApplication","jsxDEV","_jsxDEV","msalConfig","auth","clientId","redirectUri","msalInstance","Form","_ref","_s","isSignInPage","data","setData","fullName","email","password","navigate","handleSubmit","e","preventDefault","console","log","res","fetch","method","headers","body","JSON","stringify","status","ok","errorMessage","text","Error","resdata","json","token","localStorage","setItem","user","alert","error","message","handleGoogleSuccess","response","credential","handleGoogleFailure","handleMicrosoftLogin","loginResponse","loginPopup","scopes","prompt","accessToken","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","name","placeholder","value","onChange","target","type","onSuccess","onError","onClick","_c","$RefreshReg$"],"sources":["/Users/aniket/Desktop/chat-app-master/Chat App/client/src/modules/Form/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Input from '../../components/Input/index'; \nimport Button from '../../components/Button/Index';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { PublicClientApplication } from '@azure/msal-browser';\n\nconst msalConfig = {\n    auth: {\n        clientId: 'YOUR_MICROSOFT_CLIENT_ID',\n        redirectUri: 'http://localhost:3000'\n    }\n};\n\nconst msalInstance = new PublicClientApplication(msalConfig);\n\nconst Form = ({ isSignInPage = true }) => {\n    const [data, setData] = useState({\n        fullName: isSignInPage ? '' : '',\n        email: '',\n        password: ''\n    });\n\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log('Form submitted with data:', data);\n\n        try {\n            const res = await fetch(`http://localhost:8005/api/${isSignInPage ? 'login' : 'register'}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n            });\n\n            console.log('Response status:', res.status);\n            console.log('Response headers:', res.headers);\n\n            if (!res.ok) {\n                const errorMessage = await res.text();\n                throw new Error(errorMessage || 'Network response was not ok.');\n            }\n\n            const resdata = await res.json();\n            console.log('Response data:', resdata);\n\n            if (resdata.token) {\n                localStorage.setItem('user:token', resdata.token);\n                localStorage.setItem('user:detail', JSON.stringify(resdata.user));\n                navigate('/');\n            } else {\n                alert('Token not received. Authentication failed.');\n            }\n        } catch (error) {\n            console.error('Error:', error.message);\n            alert('An error occurred. Please try again later.');\n        }\n    };\n\n    const handleGoogleSuccess = async (response) => {\n        console.log('Google response:', response);\n\n        try {\n            const res = await fetch('http://localhost:8005/api/google-login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ token: response.credential })\n            });\n\n            if (!res.ok) {\n                const errorMessage = await res.text();\n                throw new Error(errorMessage || 'Network response was not ok.');\n            }\n\n            const resdata = await res.json();\n            if (resdata.token) {\n                localStorage.setItem('user:token', resdata.token);\n                localStorage.setItem('user:detail', JSON.stringify(resdata.user));\n                navigate('/');\n            } else {\n                alert('Token not received. Authentication failed.');\n            }\n        } catch (error) {\n            console.error('Error:', error.message);\n            alert('An error occurred. Please try again later.');\n        }\n    };\n\n    const handleGoogleFailure = (error) => {\n        console.error('Google login error:', error);\n        alert('Google sign-in failed. Please try again later.');\n    };\n\n    const handleMicrosoftLogin = async () => {\n        try {\n            const loginResponse = await msalInstance.loginPopup({\n                scopes: [\"user.read\"],\n                prompt: \"select_account\"\n            });\n            console.log('Microsoft login response:', loginResponse);\n\n            const res = await fetch('http://localhost:8005/api/microsoft-login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ token: loginResponse.accessToken })\n            });\n\n            if (!res.ok) {\n                const errorMessage = await res.text();\n                throw new Error(errorMessage || 'Network response was not ok.');\n            }\n\n            const resdata = await res.json();\n            if (resdata.token) {\n                localStorage.setItem('user:token', resdata.token);\n                localStorage.setItem('user:detail', JSON.stringify(resdata.user));\n                navigate('/');\n            } else {\n                alert('Token not received. Authentication failed.');\n            }\n        } catch (error) {\n            console.error('Error:', error.message);\n            alert('Microsoft sign-in failed. Please try again later.');\n        }\n    };\n\n    return (\n        <GoogleOAuthProvider clientId=\"YOUR_GOOGLE_CLIENT_ID\">\n            <div className=\"bg-white w-[400px] h-[500px] shadow-lg rounded-[10%] flex flex-col items-center justify-center\">\n                <div className='text-3xl font-extrabold'>Welcome {isSignInPage ? 'back' : ''}</div>\n                <div className='text-l mb-7'>{isSignInPage ? 'Sign in to your account' : 'Signup now to get started'}</div>\n                <form onSubmit={handleSubmit} className='w-full justify-center flex flex-col items-center'>\n                    {!isSignInPage && (\n                        <Input\n                            label='Full name'\n                            name='fullName'\n                            placeholder='Enter your full name'\n                            className='mb-5 w-[60%]'\n                            value={data.fullName}\n                            onChange={(e) => setData({ ...data, fullName: e.target.value })}\n                        />\n                    )}\n                    <Input\n                        label='Email address'\n                        name='email'\n                        placeholder='Enter your email address'\n                        className='mb-5 w-[60%]'\n                        value={data.email}\n                        onChange={(e) => setData({ ...data, email: e.target.value })}\n                    />\n                    <Input\n                        label='Password'\n                        type='password'\n                        name='password'\n                        placeholder='Enter your password'\n                        className='mb-5 w-[60%]'\n                        value={data.password}\n                        onChange={(e) => setData({ ...data, password: e.target.value })}\n                    />\n                    <Button label={isSignInPage ? 'Sign in' : 'Signup'} className='w-[60%] mb-4' type='submit' />\n                </form>\n                <div className='mb-4'>\n                    <GoogleLogin\n                        onSuccess={handleGoogleSuccess}\n                        onError={handleGoogleFailure}\n                    />\n                </div>\n                <div className='mb-4'>\n                    <Button\n                        label=\"Sign in with Microsoft\"\n                        className='w-[60%]'\n                        onClick={handleMicrosoftLogin}\n                    />\n                </div>\n                <div>\n                    {isSignInPage ? \"Don't have an account? \" : 'Already have an account? '}\n                    <span\n                        className='text-primary cursor-pointer underline'\n                        onClick={() => navigate(`/users/${isSignInPage ? 'sign_up' : 'sign_in'}`)}\n                    >\n                        {isSignInPage ? 'Sign up' : 'Sign in'}\n                    </span>\n                </div>\n            </div>\n        </GoogleOAuthProvider>\n    );\n};\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}