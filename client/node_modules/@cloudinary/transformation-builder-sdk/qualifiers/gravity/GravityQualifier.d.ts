import { Qualifier } from "@cloudinary/transformation-builder-sdk/internal/qualifier/Qualifier.js";
import { CompassGravity, ICompassGravity } from "@cloudinary/transformation-builder-sdk/qualifiers/gravity/compassGravity/CompassGravity.js";
import { AutoGravity } from "@cloudinary/transformation-builder-sdk/qualifiers/gravity/autoGravity/AutoGravity.js";
import { FocusOnGravity } from "@cloudinary/transformation-builder-sdk/qualifiers/gravity/focusOnGravity/FocusOnGravity.js";
import { FocusOnValue } from "@cloudinary/transformation-builder-sdk/qualifiers/focusOn.js";
import { AutoFocus } from "@cloudinary/transformation-builder-sdk/qualifiers/autoFocus.js";
import { CompassQualifier } from "@cloudinary/transformation-builder-sdk/qualifiers/gravity/qualifiers/compass/CompassQualifier.js";
import { XYCenterGravity } from "@cloudinary/transformation-builder-sdk/qualifiers/gravity/xyCenterGravity/XYCenterGravity.js";
export declare type IGravityString = 'auto' | ICompassGravity;
export declare type IGravity = CompassGravity | AutoGravity | FocusOnGravity | XYCenterGravity | IGravityString | string;
export declare type IGravityValue = CompassQualifier | FocusOnValue | AutoFocus;
/**
 * @memberOf Gravity.GravityQualifier
 * @extends {SDK.Qualifier}
 */
declare class GravityQualifier extends Qualifier {
    /**
     * @param value, an array containing (GravityObject | AutoGravity | string) or a string;
     */
    constructor(value: IGravityValue | IGravityValue[] | string);
}
export { GravityQualifier };
